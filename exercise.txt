1.  Find the albums recorded by the artist Queen.
Album.where("artist_id = ?", Artist.where("name = ?", "Queen").ids)

2.  Count how many tracks belong to the media type "Protected MPEG-4 video file".
Track.where("media_type_id = ?", MediaType.where("name = ?", "Protected MPEG-4 video file").ids)

3.  Find the genre with the name "Hip Hop/Rap".
Genre.where("name = ?", "Hip Hop/Rap")

4.  Count how many tracks belong to the "Hip Hop/Rap" genre
Track.where("genre_id = ?", Genre.where("name = ?", "Hip Hop/Rap").ids).count

5.  Find the total amount of time required to listen to all the tracks in the database.
Track.sum(:milliseconds)

6.  Find the highest price of any track that has the media type "MPEG audio file".
Track.where("media_type_id = ?", MediaType.where("name = ?", "MPEG audio file").ids).maximum(:unit_price)

7.  Find the name of the most expensive track that has the media type "MPEG audio file".
Track.where("media_type_id = ?", MediaType.where("name = ?", "MPEG audio file").ids).order(unit_price: :desc).first

8.  Find the 2 oldest artists.
Artist.order(created_at: :asc).limit(2)

9.  Find the least expensive track that has the genre "Electronica/Dance".
Track.where("genre_id = ?", Genre.where("name = ?", "Electronica/Dance").ids).order(unit_price: :asc).first

10.  Find all "MPEG autio file" tracks in the genre "Electronica/Dance".
Track.where("genre_id = ?", Genre.where("name = ?", "Electronica/Dance").ids).where("media_type_id = ?", MediaType.where("name = ?", "MPEG audio file").ids)


STRETCH

1.  Find all the albums whose titles start with B.
Album.where("title LIKE ?", '%B%')


2.  Find all the artists whose names start with A.
Artist.where("name LIKE ?", '%A%')
